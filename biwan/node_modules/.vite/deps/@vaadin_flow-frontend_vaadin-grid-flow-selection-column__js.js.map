{
  "version": 3,
  "sources": ["../../@vaadin/flow-frontend/vaadin-grid-flow-selection-column.js"],
  "sourcesContent": ["import '@vaadin/grid/vaadin-grid-column.js';\r\nimport { GridColumn } from '@vaadin/grid/src/vaadin-grid-column.js';\r\n{\r\n  class GridFlowSelectionColumnElement extends GridColumn {\r\n\r\n    static get is() {\r\n      return 'vaadin-grid-flow-selection-column';\r\n    }\r\n\r\n    static get properties() {\r\n      return {\r\n\r\n        /**\r\n         * Automatically sets the width of the column based on the column contents when this is set to `true`.\r\n         */\r\n        autoWidth: {\r\n          type: Boolean,\r\n          value: true\r\n        },\r\n\r\n        /**\r\n         * Width of the cells for this column.\r\n         */\r\n        width: {\r\n          type: String,\r\n          value: '56px'\r\n        },\r\n\r\n        /**\r\n         * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\r\n         */\r\n        flexGrow: {\r\n          type: Number,\r\n          value: 0\r\n        },\r\n\r\n        /**\r\n         * When true, all the items are selected.\r\n         */\r\n        selectAll: {\r\n          type: Boolean,\r\n          value: false,\r\n          notify: true\r\n        },\r\n\r\n        /**\r\n         * Whether to display the select all checkbox in indeterminate state,\r\n         * which means some, but not all, items are selected\r\n         */\r\n        indeterminate: {\r\n          type: Boolean,\r\n          value: false,\r\n          notify: true\r\n        },\r\n\r\n        selectAllHidden: Boolean\r\n      };\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n      this._boundOnSelectEvent = this._onSelectEvent.bind(this);\r\n      this._boundOnDeselectEvent = this._onDeselectEvent.bind(this);\r\n    }\r\n\r\n    static get observers() {\r\n      return [\r\n        '_onHeaderRendererOrBindingChanged(_headerRenderer, _headerCell, path, header, selectAll, indeterminate, selectAllHidden)'\r\n      ];\r\n    }\r\n\r\n    /** @private */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n      if (this._grid) {\r\n        this._grid.addEventListener('select', this._boundOnSelectEvent);\r\n        this._grid.addEventListener('deselect', this._boundOnDeselectEvent);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      if (this._grid) {\r\n        this._grid.removeEventListener('select', this._boundOnSelectEvent);\r\n        this._grid.removeEventListener('deselect', this._boundOnDeselectEvent);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Renders the Select All checkbox to the header cell.\r\n     *\r\n     * @override\r\n     */\r\n    _defaultHeaderRenderer(root, _column) {\r\n      let checkbox = root.firstElementChild;\r\n      if (!checkbox) {\r\n        checkbox = document.createElement('vaadin-checkbox');\r\n        checkbox.id = 'selectAllCheckbox';\r\n        checkbox.setAttribute('aria-label', 'Select All');\r\n        checkbox.classList.add('vaadin-grid-select-all-checkbox');\r\n        checkbox.addEventListener('click', this._onSelectAllClick.bind(this));\r\n        root.appendChild(checkbox);\r\n      }\r\n\r\n      const checked = this.selectAll;\r\n      checkbox.hidden = this.selectAllHidden;\r\n      checkbox.checked = checked;\r\n      checkbox.indeterminate = this.indeterminate;\r\n    }\r\n\r\n    /**\r\n     * Renders the Select Row checkbox to the body cell.\r\n     *\r\n     * @override\r\n     */\r\n    _defaultRenderer(root, _column, { item, selected }) {\r\n      let checkbox = root.firstElementChild;\r\n      if (!checkbox) {\r\n        checkbox = document.createElement('vaadin-checkbox');\r\n        checkbox.setAttribute('aria-label', 'Select Row');\r\n        checkbox.addEventListener('click', this._onSelectClick.bind(this));\r\n        root.appendChild(checkbox);\r\n      }\r\n\r\n      checkbox.__item = item;\r\n      checkbox.checked = selected;\r\n    }\r\n\r\n    _onSelectClick(e) {\r\n      e.currentTarget.checked ? this._grid.$connector.doDeselection([e.currentTarget.__item], true) : this._grid.$connector.doSelection([e.currentTarget.__item], true);\r\n    }\r\n\r\n    _onSelectAllClick(e) {\r\n      e.preventDefault();\r\n      if (this._grid.hasAttribute('disabled')) {\r\n        e.currentTarget.checked = !e.currentTarget.checked;\r\n        return;\r\n      }\r\n      this.selectAll ? this.$server.deselectAll() : this.$server.selectAll();\r\n    }\r\n\r\n    _onSelectEvent(e) {\r\n    }\r\n\r\n    _onDeselectEvent(e) {\r\n      if (e.detail.userOriginated) {\r\n        this.selectAll = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  customElements.define(GridFlowSelectionColumnElement.is, GridFlowSelectionColumnElement);\r\n\r\n  Vaadin.GridFlowSelectionColumnElement = GridFlowSelectionColumnElement;\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
