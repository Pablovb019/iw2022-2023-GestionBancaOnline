{
  "version": 3,
  "sources": ["../../@vaadin/flow-frontend/contextMenuConnector.js"],
  "sourcesContent": ["(function () {\r\n  function tryCatchWrapper(callback) {\r\n    return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Context Menu');\r\n  }\r\n\r\n  function getContainer(appId, nodeId) {\r\n    try {\r\n      return window.Vaadin.Flow.clients[appId].getByNodeId(nodeId);\r\n    } catch (error) {\r\n      console.error('Could not get node %s from app %s', nodeId, appId);\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the connector for a context menu element.\r\n   *\r\n   * @param {HTMLElement} contextMenu\r\n   * @param {string} appId\r\n   */\r\n  function initLazy(contextMenu, appId) {\r\n    if (contextMenu.$connector) {\r\n      return;\r\n    }\r\n\r\n    contextMenu.$connector = {\r\n      /**\r\n       * Generates and assigns the items to the context menu.\r\n       *\r\n       * @param {number} nodeId\r\n       */\r\n      generateItems: tryCatchWrapper((nodeId) => {\r\n        const items = generateItemsTree(appId, nodeId);\r\n\r\n        contextMenu.items = items;\r\n      })\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generates an items tree compatible with the context-menu web component\r\n   * by traversing the given Flow DOM tree of context menu item nodes\r\n   * whose root node is identified by the `nodeId` argument.\r\n   *\r\n   * The app id is required to access the store of Flow DOM nodes.\r\n   *\r\n   * @param {string} appId\r\n   * @param {number} nodeId\r\n   */\r\n  function generateItemsTree(appId, nodeId) {\r\n    const container = getContainer(appId, nodeId);\r\n    if (!container) {\r\n      return;\r\n    }\r\n\r\n    return Array.from(container.children).map((child) => {\r\n      const item = {\r\n        component: child,\r\n        checked: child._checked,\r\n        theme: child.__theme\r\n      };\r\n      if (child.localName == 'vaadin-context-menu-item' && child._containerNodeId) {\r\n        item.children = generateItemsTree(appId, child._containerNodeId);\r\n      }\r\n      child._item = item;\r\n      return item;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the checked state for a context menu item.\r\n   *\r\n   * This method is supposed to be called when the context menu item is closed,\r\n   * so there is no need for triggering a re-render eagarly.\r\n   *\r\n   * @param {HTMLElement} component\r\n   * @param {boolean} checked\r\n   */\r\n  function setChecked(component, checked) {\r\n    if (component._item) {\r\n      component._item.checked = checked;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the theme for a context menu item.\r\n   *\r\n   * This method is supposed to be called when the context menu item is closed,\r\n   * so there is no need for triggering a re-render eagarly.\r\n   *\r\n   * @param {HTMLElement} component\r\n   * @param {string | undefined | null} theme\r\n   */\r\n  function setTheme(component, theme) {\r\n    if (component._item) {\r\n      component._item.theme = theme;\r\n    }\r\n  }\r\n\r\n  window.Vaadin.Flow.contextMenuConnector = {\r\n    initLazy(...args) {\r\n      return tryCatchWrapper(initLazy)(...args);\r\n    },\r\n\r\n    generateItemsTree(...args) {\r\n      return tryCatchWrapper(generateItemsTree)(...args);\r\n    },\r\n\r\n    setChecked(...args) {\r\n      return tryCatchWrapper(setChecked)(...args);\r\n    },\r\n\r\n    setTheme(...args) {\r\n      return tryCatchWrapper(setTheme)(...args);\r\n    }\r\n  };\r\n})();\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,KAAC,WAAY;AACX,eAAS,gBAAgB,UAAU;AACjC,eAAO,OAAO,OAAO,KAAK,gBAAgB,UAAU,qBAAqB;AAAA,MAC3E;AAEA,eAAS,aAAa,OAAO,QAAQ;AACnC,YAAI;AACF,iBAAO,OAAO,OAAO,KAAK,QAAQ,OAAO,YAAY,MAAM;AAAA,QAC7D,SAAS,OAAP;AACA,kBAAQ,MAAM,qCAAqC,QAAQ,KAAK;AAChE,kBAAQ,MAAM,KAAK;AAAA,QACrB;AAAA,MACF;AAQA,eAAS,SAAS,aAAa,OAAO;AACpC,YAAI,YAAY,YAAY;AAC1B;AAAA,QACF;AAEA,oBAAY,aAAa;AAAA,UAMvB,eAAe,gBAAgB,CAAC,WAAW;AACzC,kBAAM,QAAQ,kBAAkB,OAAO,MAAM;AAE7C,wBAAY,QAAQ;AAAA,UACtB,CAAC;AAAA,QACH;AAAA,MACF;AAYA,eAAS,kBAAkB,OAAO,QAAQ;AACxC,cAAM,YAAY,aAAa,OAAO,MAAM;AAC5C,YAAI,CAAC,WAAW;AACd;AAAA,QACF;AAEA,eAAO,MAAM,KAAK,UAAU,QAAQ,EAAE,IAAI,CAAC,UAAU;AACnD,gBAAM,OAAO;AAAA,YACX,WAAW;AAAA,YACX,SAAS,MAAM;AAAA,YACf,OAAO,MAAM;AAAA,UACf;AACA,cAAI,MAAM,aAAa,8BAA8B,MAAM,kBAAkB;AAC3E,iBAAK,WAAW,kBAAkB,OAAO,MAAM,gBAAgB;AAAA,UACjE;AACA,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT,CAAC;AAAA,MACH;AAWA,eAAS,WAAW,WAAW,SAAS;AACtC,YAAI,UAAU,OAAO;AACnB,oBAAU,MAAM,UAAU;AAAA,QAC5B;AAAA,MACF;AAWA,eAAS,SAAS,WAAW,OAAO;AAClC,YAAI,UAAU,OAAO;AACnB,oBAAU,MAAM,QAAQ;AAAA,QAC1B;AAAA,MACF;AAEA,aAAO,OAAO,KAAK,uBAAuB;AAAA,QACxC,YAAY,MAAM;AAChB,iBAAO,gBAAgB,QAAQ,EAAE,GAAG,IAAI;AAAA,QAC1C;AAAA,QAEA,qBAAqB,MAAM;AACzB,iBAAO,gBAAgB,iBAAiB,EAAE,GAAG,IAAI;AAAA,QACnD;AAAA,QAEA,cAAc,MAAM;AAClB,iBAAO,gBAAgB,UAAU,EAAE,GAAG,IAAI;AAAA,QAC5C;AAAA,QAEA,YAAY,MAAM;AAChB,iBAAO,gBAAgB,QAAQ,EAAE,GAAG,IAAI;AAAA,QAC1C;AAAA,MACF;AAAA,IACF,GAAG;AAAA;AAAA;",
  "names": []
}
