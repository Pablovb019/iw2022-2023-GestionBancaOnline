{
  "version": 3,
  "sources": ["../../@vaadin/flow-frontend/gridProConnector.js", "dep:@vaadin_flow-frontend_gridProConnector__js"],
  "sourcesContent": ["(function () {\r\n  const tryCatchWrapper = function (callback) {\r\n    return window.Vaadin.Flow.tryCatchWrapper(callback, 'Vaadin Grid Pro');\r\n  };\r\n\r\n  function isEditedRow(grid, rowData) {\r\n    return grid.__edited && grid.__edited.model.item.key === rowData.item.key;\r\n  }\r\n\r\n  window.Vaadin.Flow.gridProConnector = {\r\n    setEditModeRenderer: (column, component) =>\r\n      tryCatchWrapper(function (column, component) {\r\n        column.editModeRenderer = tryCatchWrapper(function editModeRenderer(root, _, rowData) {\r\n          if (!isEditedRow(this._grid, rowData)) {\r\n            this._grid._stopEdit();\r\n            return;\r\n          }\r\n\r\n          if (component.parentNode === root) {\r\n            return;\r\n          }\r\n\r\n          root.appendChild(component);\r\n          this._grid._cancelStopEdit();\r\n          component.focus();\r\n        });\r\n\r\n        // Not needed in case of custom editor as value is set on server-side.\r\n        // Overridden in order to avoid blinking of the cell content.\r\n        column._setEditorValue = function (editor, value) {};\r\n        column._getEditorValue = function (editor) {\r\n          return;\r\n        };\r\n      })(column, component),\r\n\r\n    patchEditModeRenderer: (column) =>\r\n      tryCatchWrapper(function (column) {\r\n        column.__editModeRenderer = tryCatchWrapper(function __editModeRenderer(root, column, rowData) {\r\n          const cell = root.assignedSlot.parentNode;\r\n          const grid = column._grid;\r\n\r\n          if (!isEditedRow(grid, rowData)) {\r\n            grid._stopEdit();\r\n            return;\r\n          }\r\n\r\n          const tagName = column._getEditorTagName(cell);\r\n          if (!root.firstElementChild || root.firstElementChild.localName.toLowerCase() !== tagName) {\r\n            root.innerHTML = `<${tagName}></${tagName}>`;\r\n          }\r\n        });\r\n      })(column)\r\n  };\r\n})();\r\n", "export default require(\"../node_modules/@vaadin/flow-frontend/gridProConnector.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,KAAC,WAAY;AACX,YAAM,kBAAkB,SAAU,UAAU;AAC1C,eAAO,OAAO,OAAO,KAAK,gBAAgB,UAAU,iBAAiB;AAAA,MACvE;AAEA,eAAS,YAAY,MAAM,SAAS;AAClC,eAAO,KAAK,YAAY,KAAK,SAAS,MAAM,KAAK,QAAQ,QAAQ,KAAK;AAAA,MACxE;AAEA,aAAO,OAAO,KAAK,mBAAmB;AAAA,QACpC,qBAAqB,CAAC,QAAQ,cAC5B,gBAAgB,SAAUA,SAAQC,YAAW;AAC3C,UAAAD,QAAO,mBAAmB,gBAAgB,SAAS,iBAAiB,MAAM,GAAG,SAAS;AACpF,gBAAI,CAAC,YAAY,KAAK,OAAO,OAAO,GAAG;AACrC,mBAAK,MAAM,UAAU;AACrB;AAAA,YACF;AAEA,gBAAIC,WAAU,eAAe,MAAM;AACjC;AAAA,YACF;AAEA,iBAAK,YAAYA,UAAS;AAC1B,iBAAK,MAAM,gBAAgB;AAC3B,YAAAA,WAAU,MAAM;AAAA,UAClB,CAAC;AAID,UAAAD,QAAO,kBAAkB,SAAU,QAAQ,OAAO;AAAA,UAAC;AACnD,UAAAA,QAAO,kBAAkB,SAAU,QAAQ;AACzC;AAAA,UACF;AAAA,QACF,CAAC,EAAE,QAAQ,SAAS;AAAA,QAEtB,uBAAuB,CAAC,WACtB,gBAAgB,SAAUA,SAAQ;AAChC,UAAAA,QAAO,qBAAqB,gBAAgB,SAAS,mBAAmB,MAAMA,SAAQ,SAAS;AAC7F,kBAAM,OAAO,KAAK,aAAa;AAC/B,kBAAM,OAAOA,QAAO;AAEpB,gBAAI,CAAC,YAAY,MAAM,OAAO,GAAG;AAC/B,mBAAK,UAAU;AACf;AAAA,YACF;AAEA,kBAAM,UAAUA,QAAO,kBAAkB,IAAI;AAC7C,gBAAI,CAAC,KAAK,qBAAqB,KAAK,kBAAkB,UAAU,YAAY,MAAM,SAAS;AACzF,mBAAK,YAAY,IAAI,aAAa;AAAA,YACpC;AAAA,UACF,CAAC;AAAA,QACH,CAAC,EAAE,MAAM;AAAA,MACb;AAAA,IACF,GAAG;AAAA;AAAA;;;ACrDH,IAAO,mDAAQ;",
  "names": ["column", "component"]
}
